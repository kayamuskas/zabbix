# Extra rules for postgres
#
CREATE USER zabbix;
GRANT CONNECT ON DATABASE foo_db to zabbix;
\c foo_db
GRANT USAGE ON SCHEMA public to zabbix;
GRANT SELECT ON ALL SEQUENCES IN SCHEMA public TO zabbix;
GRANT SELECT ON ALL TABLES IN SCHEMA public TO zabbix;

#
# For PostgreSQL buffers info
# apt-get install postgresql-bdr-contrib-9.4
# add to pg_hba.conf
 host    foo_db           zabbix          127.0.0.1/32              trust

CREATE EXTENSION pg_buffercache;
\dx pg_buffercache
GRANT EXECUTE ON FUNCTION public.pg_buffercache_pages() to zabbix;
GRANT SELECT ON pg_buffercache TO zabbix;

check it:
$zabbix_agentd -t pgsql.buffercache.total['-h 127.0.0.1 -p 5445 -U zabbix -d foo_db']

# For pg_stat_statements
shared_preload_libraries = 'pg_stat_statements'
pg_stat_statements.max = 10000
pg_stat_statements.track = all

postgres=# CREATE EXTENSION pg_stat_statements;

# For WAL count
apt-get install postgresql-bdr-plperl-9.4

\c foo_db
postgres=# CREATE LANGUAGE plperlu;
postgres=# SELECT* FROM pg_language;

CREATE FUNCTION nosecurity_ls(text) RETURNS setof text AS $$
  opendir(my $d, $_[0]) or die $!;
    while (my $f=readdir($d)) {
        return_next($f);
          }
            return undef; 
            $$ language plperlu;

change func in zabbix_agentd.conf.d/postgresql.conf
#UserParameter=pgsql.wal.count[*],psql -qAtX $1 -c "select count(*) from pg_ls_dir('pg_xlog')"
UserParameter=pgsql.wal.count[*],psql -qAtX $1 -c "select count(*) from nosecurity_ls('pg_xlog')"

